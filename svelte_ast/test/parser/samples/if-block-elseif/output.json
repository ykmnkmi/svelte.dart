{
  "start": 0,
  "end": 91,
  "class": "Root",
  "fragment": {
    "start": 0,
    "end": 91,
    "class": "Fragment",
    "children": [
      {
        "start": 0,
        "end": 91,
        "class": "IfBlock",
        "elseIf": false,
        "test": {
          "@class": "BinaryExpression",
          "@toString": "x > 10",
          "start": 5,
          "end": 11,
          "operator": {
            "start": 7,
            "end": 8,
            "type": "GT",
            "lexeme": ">"
          },
          "beginToken": {
            "start": 5,
            "end": 6,
            "type": "IDENTIFIER",
            "lexeme": "x"
          },
          "endToken": {
            "start": 9,
            "end": 11,
            "type": "INT",
            "lexeme": "10"
          },
          "leftOperand": {
            "@class": "SimpleIdentifier",
            "@toString": "x",
            "start": 5,
            "end": 6,
            "token": {
              "start": 5,
              "end": 6,
              "type": "IDENTIFIER",
              "lexeme": "x"
            },
            "ancestorCascade": null,
            "beginToken": {
              "start": 5,
              "end": 6,
              "type": "IDENTIFIER",
              "lexeme": "x"
            },
            "endToken": {
              "start": 5,
              "end": 6,
              "type": "IDENTIFIER",
              "lexeme": "x"
            },
            "isQualified": false,
            "isSynthetic": false,
            "name": "x"
          },
          "rightOperand": {
            "@class": "IntegerLiteral",
            "@toString": "10",
            "start": 9,
            "end": 11,
            "literal": {
              "start": 9,
              "end": 11,
              "type": "INT",
              "lexeme": "10"
            },
            "value": 10,
            "beginToken": {
              "start": 9,
              "end": 11,
              "type": "INT",
              "lexeme": "10"
            },
            "endToken": {
              "start": 9,
              "end": 11,
              "type": "INT",
              "lexeme": "10"
            },
            "immediatelyNegated": false
          },
          "canBeConst": false,
          "inConstantContext": false,
          "isAssignable": false,
          "unParenthesized": "@seen { self }"
        },
        "consequent": {
          "start": -1,
          "end": -1,
          "class": "Fragment",
          "children": [
            {
              "start": 12,
              "end": 15,
              "class": "Text",
              "raw": "\n  ",
              "data": "\n  "
            },
            {
              "start": 15,
              "end": 42,
              "class": "RegularElement",
              "name": "p",
              "attributes": [],
              "fragment": {
                "start": 18,
                "end": 38,
                "class": "Fragment",
                "children": [
                  {
                    "start": 18,
                    "end": 38,
                    "class": "Text",
                    "raw": "x is greater than 10",
                    "data": "x is greater than 10"
                  }
                ]
              }
            },
            {
              "start": 42,
              "end": 43,
              "class": "Text",
              "raw": "\n",
              "data": "\n"
            }
          ]
        },
        "alternate": null
      }
    ]
  },
  "instance": null,
  "module": null,
  "style": null,
  "options": null
}